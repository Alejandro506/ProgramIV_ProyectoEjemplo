@{
    ViewData["Title"] = "Inicio";
    // Helpers por si no hay datos:
    var next = ViewBag.NextCitas as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var slots = ViewBag.FreeSlots as IEnumerable<DateTime> ?? Enumerable.Empty<DateTime>();
    var topClientes = ViewBag.TopClientes as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var porTipo = ViewBag.AnimalesPorTipo as IDictionary<string,int> ?? new Dictionary<string,int>();

    // Obtener Doctores sin async (evita ToListAsync en la vista)
    var _db = Context.RequestServices.GetService<myFirstProject.Data.Models.AppDbContext>();
    var doctoresDrop = _db!.Doctores.OrderBy(x => x.Nombre).ToList();
}

<style>
  .hero {
    background: radial-gradient(900px 400px at -10% -30%, rgba(59,130,246,.25), transparent 60%),
                radial-gradient(900px 500px at 110% -20%, rgba(147,51,234,.22), transparent 60%),
                linear-gradient(180deg, #0b1020 0%, #0b1222 100%);
    color: #e5e7eb; border-radius: 22px; border:1px solid rgba(255,255,255,.08);
    box-shadow: 0 30px 80px rgba(2,6,23,.35);
  }
  .chip { font-weight:700; border-radius:999px; padding:.25rem .6rem }
  .chip-blue { background:#dbeafe; color:#1d4ed8 }
  .chip-violet{ background:#ede9fe; color:#6d28d9 }
  .chip-orange{ background:#ffedd5; color:#c2410c }
  .tile { border-radius:16px; border:1px solid #e5e7eb; transition:transform .12s ease, box-shadow .12s ease }
  .tile:hover { transform:translateY(-2px); box-shadow:0 14px 34px rgba(2,6,23,.18) }
  .kpi { border-radius:14px; border:1px dashed rgba(255,255,255,.25) }

  /* Dashboard nuevo */
  .card-soft { border:1px solid #eef2f7; border-radius:16px; }
  .section-title { font-weight:700; font-size:1.05rem }
  .pill { border:1px solid #e5e7eb; border-radius:999px; padding:.25rem .7rem; font-weight:600; }
  .mini { font-size:.85rem }
  .empty { color:#6b7280; }
</style>

<div class="hero p-4 p-md-5 mb-4">
  <div class="d-flex gap-2 mb-3">
    <span class="chip chip-blue">Clínica</span>
    <span class="chip chip-violet">Citas</span>
    <span class="chip chip-orange">Reportes</span>
  </div>

  <div class="row align-items-center g-4">
    <div class="col-lg-7">
      <h1 class="display-5 fw-bold mb-3">
        <span class="text-info">Bienvenido a Mi Mascota Consentida</span>
      </h1>
      <p class="lead mb-4">
        Administra <b>tipos de animales</b>, <b>clientes</b>, <b>doctores</b> y todas las operaciones de
        <b>citas</b> (generar, agendar, reagendar, cancelar). Además, consulta reportes e historial.
      </p>

      <div class="d-flex flex-wrap gap-2">
        <a class="btn btn-outline-light fw-semibold" asp-controller="Citas" asp-action="Index">
          <i class="fa fa-calendar-check me-1"></i>Citas
        </a>
        <a class="btn btn-outline-light fw-semibold" asp-controller="Clientes" asp-action="Index">
          <i class="fa fa-user me-1"></i>Clientes
        </a>
        <a class="btn btn-outline-light fw-semibold" asp-controller="Doctores" asp-action="Index">
          <i class="fa fa-user-doctor me-1"></i>Doctores
        </a>
        <a class="btn btn-outline-light fw-semibold" asp-controller="TiposAnimales" asp-action="Index">
          <i class="fa fa-paw me-1"></i>Tipos de Animales
        </a>
        <a class="btn btn-outline-light fw-semibold" asp-controller="Reportes" asp-action="AnimalesConCitas">
          <i class="fa fa-chart-column me-1"></i>Reportes
        </a>
      </div>
    </div>

    <div class="col-lg-5">
      <div class="kpi p-3">
        <div class="row text-center g-3">
          <div class="col-4">
            <div class="fw-bold fs-4">@((int?)ViewBag.CitasHoy ?? 0)</div>
            <div class="small opacity-75">Citas hoy</div>
          </div>
          <div class="col-4">
            <div class="fw-bold fs-4">@((int?)ViewBag.CitasAgendadas ?? 0)</div>
            <div class="small opacity-75">Agendadas</div>
          </div>
          <div class="col-4">
            <div class="fw-bold fs-4">@((int?)ViewBag.CitasCanceladas ?? 0)</div>
            <div class="small opacity-75">Canceladas</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- === Nuevo panel de valor === -->
<div class="row g-4">

  <!-- Próximas citas -->
  <div class="col-xxl-6">
  <div class="card card-soft card-tight h-100">
    <div class="card-body">
      <div class="d-flex justify-content-between align-items-center mb-2">
        <span class="section-title">
          <i class="fa fa-bell me-2"></i>Próximas citas (7 días)
        </span>
        <a class="btn btn-sm btn-outline-primary" asp-controller="Citas" asp-action="Index">
          Ver todas
        </a>
      </div>

      @if (!next.Any())
      {
        <div class="empty small">No hay citas próximas. <a asp-controller="Citas" asp-action="Nueva">Agenda una ahora</a>.</div>
      }
      else
      {
        <div class="table-responsive">
          <table class="table table-citas align-middle mb-0">
            <thead>
              <tr>
                <th class="idcol">#</th>
                <th class="fechacol">Fecha/Hora</th>
                <th>Animal</th>
                <th>Cliente</th>
                <th>Doctor</th>
                <th class="accion">Acción</th>
              </tr>
            </thead>
            <tbody>
            @foreach (var c in next)
            {
              <tr>
                <td class="idcol">@c.Id</td>
                <td class="fechacol">@(((DateTime)c.Fecha).ToString("dd/MM/yyyy HH:mm"))</td>
                <td>@c.Animal</td>
                <td>@c.Cliente</td>
                <td>@c.Doctor</td>
                <td class="accion">
                  <a class="btn btn-xxs btn-outline-secondary" asp-controller="Citas" asp-action="Detalle" asp-route-id="@c.Id">Detalle</a>
                  <a class="btn btn-xxs btn-warning ms-1" asp-controller="Citas" asp-action="ReagendarListado" asp-route-q="@c.Animal">Reagendar</a>
                </td>
              </tr>
            }
            </tbody>
          </table>
        </div>
      }
    </div>
  </div>
</div>


  <!-- Disponibilidad + Resumen por tipo -->
  <div class="col-xxl-6">
    <div class="card card-soft h-100">
      <div class="card-body">
        <div class="row g-4">
          <div class="col-lg-7">
            <div class="d-flex justify-content-between align-items-center mb-2">
              <span class="section-title"><i class="fa fa-clock me-2"></i>Disponibilidad rápida</span>
              <a class="btn btn-sm btn-outline-primary" asp-controller="Citas" asp-action="GenerarSemana">Citas de la semana</a>
            </div>
            @if (!slots.Any())
            {
                <div class="empty small">No hay huecos precalculados. Abre “Citas de la semana” para ver por doctor.</div>
            }
            else
            {
              <div class="d-flex flex-wrap gap-2">
                @foreach (var s in slots.Take(8))
                {
                  <span class="pill mini"><i class="fa fa-calendar-day me-1"></i>@s.ToString("ddd dd/MM HH:mm")</span>
                }
              </div>
            }
          </div>

          <div class="col-lg-5">
            <div class="section-title mb-2"><i class="fa fa-paw me-2"></i>Animales por tipo</div>
            @if (!porTipo.Any())
            {
              <div class="empty small">Sin datos de tipos.</div>
            }
            else
            {
              <div class="d-flex flex-wrap gap-2">
                @foreach (var kv in porTipo.OrderByDescending(k => k.Value).Take(10))
                {
                  <span class="pill mini">@kv.Key <span class="text-secondary">(@kv.Value)</span></span>
                }
              </div>
            }
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Top clientes -->
  <div class="col-12">
    <div class="card card-soft">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <span class="section-title"><i class="fa fa-crown me-2"></i>Clientes con más mascotas</span>
          <a class="btn btn-sm btn-outline-primary" asp-controller="Clientes" asp-action="Index">Ir a clientes</a>
        </div>

        @if (!topClientes.Any())
        {
            <div class="empty small">Aún no hay ranking de clientes.</div>
        }
        else
        {
          <div class="row g-3">
            @foreach (var cl in topClientes.Take(5))
            {
              <div class="col-md-6 col-xl-4">
                <div class="p-3 border rounded-3">
                  <div class="d-flex justify-content-between">
                    <div class="fw-semibold">@cl.Nombre</div>
                    <div class="text-secondary small"><i class="fa fa-paw me-1"></i>@cl.Mascotas mascotas</div>
                  </div>
                  <div class="progress mt-2" style="height:6px;">
                    @{
                      int total = (int)(ViewBag.TotalAnimales ?? 0);
                      int val = (int)cl.Mascotas;
                      int pct = total > 0 ? (int)Math.Round(val * 100.0 / total) : 0;
                    }
                    <div class="progress-bar" role="progressbar" style="width:@pct%"></div>
                  </div>
                </div>
              </div>
            }
          </div>
        }
      </div>
    </div>
  </div>

</div>

<style>
  /* Compactor del panel izquierdo */
  .card-tight .table td,
  .card-tight .table th { padding: .45rem .6rem; }

  .table-citas thead th { font-size:.82rem; color:#6b7280; letter-spacing:.2px; }
  .table-citas .idcol   { width: 54px; }
  .table-citas .fechacol{ white-space:nowrap; width: 150px; }
  .table-citas .accion  { width: 160px; text-align:right; }

  .btn-xxs { padding:.18rem .55rem; font-size:.8rem; border-radius:.5rem; }

  /* Suaviza el contenedor para que no “salte” visualmente */
  .card-soft.card-tight { border-color:#eef2f7; }
</style>

<style>
  /* Mini calendario semanal */
  .mini-week { border-radius:16px; border:1px solid #e5e7eb; background:#fff; }
  .mini-week .toolbar { display:flex; gap:.5rem; align-items:center; justify-content:space-between }
  .mini-grid { display:grid; grid-template-columns: 110px repeat(7, 1fr); border-top:1px solid #eef2f7; }
  .mini-colhead { padding:.5rem .6rem; font-weight:600; font-size:.9rem; color:#475569; background:#f8fafc; border-bottom:1px solid #eef2f7; }
  .mini-time { padding:.4rem .5rem; font-size:.85rem; color:#64748b; border-right:1px solid #f1f5f9; }
  .mini-cell { position:relative; padding:.3rem .35rem; border-right:1px solid #f1f5f9; border-bottom:1px solid #f1f5f9; min-height:34px; cursor:pointer }
  .mini-cell.free:hover { background:#ecfeff; }
  .mini-badge { display:inline-block; font-size:.72rem; padding:.1rem .35rem; border-radius:.35rem; }
  .mini-badge.busy { background:#fee2e2; color:#991b1b; }
  .mini-badge.free { background:#dcfce7; color:#166534; }
  .mini-legend { gap:.75rem }
</style>

<div class="card mini-week mt-4">
  <div class="card-body">
    <div class="toolbar mb-3">
      <div class="d-flex align-items-center gap-2">
        <strong>Calendario semanal</strong>
        <div class="mini-legend d-inline-flex align-items-center">
          <span class="mini-badge busy">Ocupado</span>
          <span class="mini-badge free">Libre</span>
        </div>
      </div>
      <div class="d-flex gap-2">
        <select id="mwDoctor" class="form-select form-select-sm" style="width:220px">
          <option value="">— Selecciona doctor —</option>
          @foreach (var d in doctoresDrop)
          {
            <option value="@d.IdDoctor">@d.Nombre</option>
          }
        </select>

        <button id="mwPrev" class="btn btn-sm btn-outline-secondary"><i class="fa fa-chevron-left"></i></button>
        <input id="mwWeek" type="date" class="form-control form-control-sm" style="width:160px">
        <button id="mwNext" class="btn btn-sm btn-outline-secondary"><i class="fa fa-chevron-right"></i></button>

        <a id="mwRegistrar" class="btn btn-sm btn-primary ms-2 disabled" href="#">
          <i class="fa fa-plus me-1"></i> Registrar cita
        </a>
      </div>
    </div>

    <!-- encabezados -->
    <div id="mwHead" class="mini-grid"></div>
    <!-- filas de horas -->
    <div id="mwBody" class="mini-grid"></div>
  </div>
</div>

<script>
(function(){
  // Config: horario y paso (debe coincidir con tu servicio)
  const STEP_MIN = 30;
  const START_H  = 8;
  const END_H    = 18; // sin incluir

  const head = document.getElementById('mwHead');
  const body = document.getElementById('mwBody');
  const sel  = document.getElementById('mwDoctor');
  const week = document.getElementById('mwWeek');
  const prev = document.getElementById('mwPrev');
  const next = document.getElementById('mwNext');
  const btnReg = document.getElementById('mwRegistrar');

  function weekStart(d){
    const dd = new Date(d); const dow=(dd.getDay()+6)%7;
    dd.setDate(dd.getDate()-dow); dd.setHours(0,0,0,0);
    return dd;
  }
  function ymd(d){ return d.toISOString().substring(0,10); }
  function hm(h,m){ return (h+'').padStart(2,'0')+':'+(m+'').padStart(2,'0'); }

  function renderHead(base){
    head.innerHTML = '';
    const days = [...Array(8)].map(()=>document.createElement('div'));
    days[0].className = 'mini-colhead';
    days[0].textContent = 'Hora';
    for(let i=0;i<7;i++){
      const d = new Date(base); d.setDate(base.getDate()+i);
      const el = days[i+1];
      el.className = 'mini-colhead text-center';
      el.innerHTML = d.toLocaleDateString('es-CR',{weekday:'short', day:'2-digit', month:'2-digit'}).replace('.', '');
    }
    days.forEach(el=>head.appendChild(el));
  }

  function renderBody(base, data, doctor){
    body.innerHTML = '';
    const busy = new Map();
    (data.usadas||[]).forEach(u=>{ busy.set(new Date(u.fechaHora).toISOString(), u); });
    const free = new Set((data.libres||[]).map(x=>new Date(x).toISOString()));

    btnReg.classList.add('disabled');
    btnReg.dataset.target = '';

    for(let h=START_H; h<END_H; h++){
      for(let m=0; m<60; m+=STEP_MIN){
        const timeCell = document.createElement('div');
        timeCell.className = 'mini-time';
        timeCell.textContent = hm(h,m);
        body.appendChild(timeCell);

        for(let i=0;i<7;i++){
          const d = new Date(base); d.setDate(base.getDate()+i);
          d.setHours(h,m,0,0);
          const iso = d.toISOString();

          const cell = document.createElement('div');
          cell.className = 'mini-cell';

          if(busy.has(iso)){
            const u = busy.get(iso);
            const b = document.createElement('span');
            b.className = 'mini-badge busy';
            b.textContent = (u.estado ?? 'Agendada');
            cell.appendChild(b);

            const small = document.createElement('div');
            small.className = 'small text-muted';
            small.textContent = `${u.animal} · ${u.cliente}`;
            cell.appendChild(small);

            cell.onclick = () => { window.location.href = `/Citas/Detalle/${u.idCita}`; };
          } else if (free.has(iso)){
            cell.classList.add('free');
            const b = document.createElement('span');
            b.className = 'mini-badge free';
            b.textContent = 'Libre';
            cell.appendChild(b);

            cell.onclick = () => {
              btnReg.classList.remove('disabled');
              btnReg.href = `/Citas/Nueva?idDoctor=${doctor}&fechaHora=${encodeURIComponent(d.toISOString())}`;
            };
          } else {
            cell.style.background = '#fafafa';
            cell.style.cursor = 'default';
          }

          body.appendChild(cell);
        }
      }
    }
  }

  async function load(){
    const doctor = parseInt(sel.value||'0',10);
    if(!doctor){ head.innerHTML=''; body.innerHTML='<div class="p-3 text-muted">Selecciona un doctor…</div>'; return; }

    const base = weekStart(new Date(week.value || new Date()));
    week.value = ymd(base);

    renderHead(base);

    const url = `/Citas/SemanaMiniJson?idDoctor=${doctor}&week=${week.value}`;
    const res = await fetch(url);
    const data = await res.json();

    renderBody(base, data, doctor);
  }

  const base = weekStart(new Date());
  week.value = ymd(base);

  sel.addEventListener('change', load);
  week.addEventListener('change', load);
  prev.addEventListener('click', ()=>{ const d=new Date(week.value); d.setDate(d.getDate()-7); week.value=ymd(d); load(); });
  next.addEventListener('click', ()=>{ const d=new Date(week.value); d.setDate(d.getDate()+7); week.value=ymd(d); load(); });

  (function autoSelectDoctor(){
    const opts = [...sel.options].filter(o=>o.value);
    if(opts.length===1){ sel.value = opts[0].value; }
  })();

  load();
})();
</script>
